"use strict";var precacheConfig=[["/index.html","648c5cac709a744e5b3197858ef9dbc7"],["/static/media/aCrystalWasForged.f4b5ea14.wav","f4b5ea1496221d0a1d289bc863512d27"],["/static/media/miningSuccess.10ca6502.wav","10ca65022458dc0da4cfb5229b23bdae"],["/static/media/planet0.047cef66.wav","047cef6619f480282d132cd96d4b9aa0"],["/static/media/planet0.cd2085d3.png","cd2085d30dfdcd5084952f3b8895990b"],["/static/media/planet1.06ea6d4b.png","06ea6d4b99eb35ac0a1204702309ca40"],["/static/media/planet1.fa9efbdc.wav","fa9efbdc007ca137c015e5981694ab69"],["/static/media/planet2.bb93aba8.wav","bb93aba8778841b9a220cdec0e1e477d"],["/static/media/planet2.d673fc3f.png","d673fc3fc1c33e7063173668a4a9cb92"],["/static/media/planet3.4dbe1f81.wav","4dbe1f813014ece09bfa9f6c921a4f68"],["/static/media/planet3.7994fc8c.png","7994fc8c8389af37ff4eef2b586fee1d"],["/static/media/planet4.a1685217.wav","a16852173697d5d555678a1f132ad8c9"],["/static/media/planet4.e55e01aa.png","e55e01aae9f2b14e19104196c7023447"],["/static/media/planet5.0d7f8301.png","0d7f8301f204901dfff0874483fec55f"],["/static/media/planet5.59338ea4.wav","59338ea4292e5570a0a7af70597f9444"],["/static/media/planet6.bb4a7911.png","bb4a79113e1c620af4d218b2d62ecf33"],["/static/media/planet6.ebc4639a.wav","ebc4639abb07c898c5f5ff29ba0605ca"],["/static/media/receivedSomething.d8e37266.wav","d8e37266cc95f1bad299eb7ecb04ff5f"],["/static/media/spaceship.9cbc836b.jpg","9cbc836b72c4486052d2fcdae23bd485"],["/static/media/telegrama.b3d5d527.woff","b3d5d527cd2717904c285ea4ed793426"],["/static/media/temple.fa6a9ca3.png","fa6a9ca345cce3df9cfbac92facdabaf"]],cacheName="sw-precache-v3-sw-precache-webpack-plugin-"+(self.registration?self.registration.scope:""),ignoreUrlParametersMatching=[/^utm_/],addDirectoryIndex=function(e,a){var t=new URL(e);return"/"===t.pathname.slice(-1)&&(t.pathname+=a),t.toString()},cleanResponse=function(a){return a.redirected?("body"in a?Promise.resolve(a.body):a.blob()).then(function(e){return new Response(e,{headers:a.headers,status:a.status,statusText:a.statusText})}):Promise.resolve(a)},createCacheKey=function(e,a,t,n){var c=new URL(e);return n&&c.pathname.match(n)||(c.search+=(c.search?"&":"")+encodeURIComponent(a)+"="+encodeURIComponent(t)),c.toString()},isPathWhitelisted=function(e,a){if(0===e.length)return!0;var t=new URL(a).pathname;return e.some(function(e){return t.match(e)})},stripIgnoredUrlParameters=function(e,t){var a=new URL(e);return a.hash="",a.search=a.search.slice(1).split("&").map(function(e){return e.split("=")}).filter(function(a){return t.every(function(e){return!e.test(a[0])})}).map(function(e){return e.join("=")}).join("&"),a.toString()},hashParamName="_sw-precache",urlsToCacheKeys=new Map(precacheConfig.map(function(e){var a=e[0],t=e[1],n=new URL(a,self.location),c=createCacheKey(n,hashParamName,t,/\.\w{8}\./);return[n.toString(),c]}));function setOfCachedUrls(e){return e.keys().then(function(e){return e.map(function(e){return e.url})}).then(function(e){return new Set(e)})}self.addEventListener("install",function(e){e.waitUntil(caches.open(cacheName).then(function(n){return setOfCachedUrls(n).then(function(t){return Promise.all(Array.from(urlsToCacheKeys.values()).map(function(a){if(!t.has(a)){var e=new Request(a,{credentials:"same-origin"});return fetch(e).then(function(e){if(!e.ok)throw new Error("Request for "+a+" returned a response with status "+e.status);return cleanResponse(e).then(function(e){return n.put(a,e)})})}}))})}).then(function(){return self.skipWaiting()}))}),self.addEventListener("activate",function(e){var t=new Set(urlsToCacheKeys.values());e.waitUntil(caches.open(cacheName).then(function(a){return a.keys().then(function(e){return Promise.all(e.map(function(e){if(!t.has(e.url))return a.delete(e)}))})}).then(function(){return self.clients.claim()}))}),self.addEventListener("fetch",function(a){if("GET"===a.request.method){var e,t=stripIgnoredUrlParameters(a.request.url,ignoreUrlParametersMatching),n="index.html";(e=urlsToCacheKeys.has(t))||(t=addDirectoryIndex(t,n),e=urlsToCacheKeys.has(t));var c="/index.html";!e&&"navigate"===a.request.mode&&isPathWhitelisted(["^(?!\\/__).*"],a.request.url)&&(t=new URL(c,self.location).toString(),e=urlsToCacheKeys.has(t)),e&&a.respondWith(caches.open(cacheName).then(function(e){return e.match(urlsToCacheKeys.get(t)).then(function(e){if(e)return e;throw Error("The cached response that was expected is missing.")})}).catch(function(e){return console.warn('Couldn\'t serve response for "%s" from cache: %O',a.request.url,e),fetch(a.request)}))}});